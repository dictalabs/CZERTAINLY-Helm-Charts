{{/*
Return static password as a string. The password is generated randomly and stored in the .Release.tmp_vars dict.
If the password was already generated, it is retrieved from the dict in the same for which allows to share
the same password between multiple objects.

Parameters:
- .release: Helm release object
- .password: Name of the password to generate

Example:
{{ include "czertainly-lib.secrets.generate_static_password" (list .release "messaging.password") }}
*/}}
{{- define "czertainly-lib.secrets.generate_static_password" -}}
{{- $top := index . 0 -}}
{{- $password := index . 1 -}}
{{- /* Create "tmp_vars" dict inside ".Release" to store various stuff. */ -}}
{{- if not (index $top "tmp_vars") -}}
{{-   $_ := set $top "tmp_vars" dict -}}
{{- end -}}
{{- /* Some random ID of this password, in case there will be other random values alongside this instance. */ -}}
{{- $key := printf "%s_%s" $top.Name $password -}}
{{- /* If $key does not yet exist in .Release.tmp_vars, then... */ -}}
{{- if not (index $top.tmp_vars $key) -}}
{{- /* ... store random password under the $key */ -}}
{{-   $_ := set $top.tmp_vars $key (randAlphaNum 20) -}}
{{- end -}}
{{- /* Retrieve previously generated value. */ -}}
{{- index $top.tmp_vars $key -}}
{{- end -}}
